# Generated by Django 3.1.7 on 2021-03-11 11:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={
                            'unique': 'A user with that username already exists.'
                        },
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name='username',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='first name'
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='last name'
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        blank=True, max_length=254, verbose_name='email address'
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name='date joined'
                    ),
                ),
                (
                    'user_role',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('DR', 'Director'),
                            ('PA', 'Platform administrator'),
                            ('MO', 'Moderator'),
                            ('EM', 'Employee'),
                        ],
                        max_length=2,
                        verbose_name='User role',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'contract_type',
                    models.CharField(max_length=100, verbose_name='Contract type'),
                ),
            ],
        ),
        migrations.CreateModel(
            name='StructuralUnit',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(max_length=50, verbose_name='Structural unit'),
                ),
            ],
        ),
        migrations.CreateModel(
            name='BaseUserModel',
            fields=[
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='userapp_baseusermodel_related',
                        serialize=False,
                        to='userapp.user',
                    ),
                ),
                (
                    'middle_name',
                    models.CharField(
                        blank=True, max_length=50, verbose_name='Middle name'
                    ),
                ),
                (
                    'gender',
                    models.CharField(
                        choices=[('M', 'Male'), ('F', 'Female')],
                        default='M',
                        max_length=1,
                        verbose_name='Gender',
                    ),
                ),
                ('birthdate', models.DateField(verbose_name='Date of birth')),
                (
                    'phone',
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, verbose_name='Phone Number'
                    ),
                ),
                ('skype', models.CharField(max_length=50, verbose_name='Skype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='userapp_director_related',
                        serialize=False,
                        to='userapp.user',
                    ),
                ),
                (
                    'middle_name',
                    models.CharField(
                        blank=True, max_length=50, verbose_name='Middle name'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='userapp_moderator_related',
                        serialize=False,
                        to='userapp.user',
                    ),
                ),
                (
                    'middle_name',
                    models.CharField(
                        blank=True, max_length=50, verbose_name='Middle name'
                    ),
                ),
                (
                    'offices',
                    models.CharField(
                        max_length=50, verbose_name='Offices under responsibility'
                    ),
                ),
                (
                    'rooms',
                    models.CharField(
                        max_length=50, verbose_name='Rooms under responsibility'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlatformAdministrator',
            fields=[
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='userapp_platformadministrator_related',
                        serialize=False,
                        to='userapp.user',
                    ),
                ),
                (
                    'middle_name',
                    models.CharField(
                        blank=True, max_length=50, verbose_name='Middle name'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                (
                    'baseusermodel_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='userapp.baseusermodel',
                    ),
                ),
                (
                    'date_of_employment',
                    models.DateField(verbose_name='Date of employment'),
                ),
                (
                    'role',
                    models.CharField(
                        choices=[('EM', 'Employee'), ('SU', 'Supervisor')],
                        default='EM',
                        max_length=2,
                    ),
                ),
                (
                    'contract_type',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='employee',
                        to='userapp.contract',
                    ),
                ),
                (
                    'structural_unit',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='employee',
                        to='userapp.structuralunit',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('userapp.baseusermodel',),
        ),
    ]
